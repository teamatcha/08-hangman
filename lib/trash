
#p toto.load_game
#p Game.game_choice.game_initial

=begin
    def list_json_files_saved
        Dir.glob('**/*.json').each do |f|
        File.basename(f)
        end
    end

    def load_file
        p list_file = list_json_files_saved
        puts "Choose the file to load among the list starting at 1"
        index = gets.chomp
        file_to_load = list_file[index.to_i-1] 

        file = JSON.parse(File.read(file_to_load))
        @array_word = file['initial_word']
        @used_letters = file['used_letter']
        @guess_word = file['guess_word']
        @attempts_left = file['attempts_left']
    end
=end



=begin
    def initialize
        @used_letters = []
    end

    def user_input
        gets.chomp.downcase
    end
=begin
    def save_game(guess_word, attempts)
        Dir.mkdir('output') unless Dir.exists?('output')
        filename = "output/save_game.json"
        temp_hash = {"used_letter" => @used_letters , "guess_word" : guess_word, "attemps left" : attempts}
        File.open(filename, 'w') do |file|
            file.write(temp_hash.to_json)
        end
        #file json => guess_word, used_letters, nombre d'attemps left
    end

    def play
        array_word = random_word.split("")
        p array_word

        guess_word = Array.new(array_word.length, "_")
        p guess_word
        attempts = 8

    
        loop do
            user = user_input
           
            if @used_letters.include?(user)
            puts "Already used ! Choose another one"
          else
            @used_letters << user
            if array_word.include?(user)
              indexes = array_word.each_index.select { |index| array_word[index] == user }
              indexes.each { |index| guess_word[index] = user }
              p guess_word
      
            else
              attempts -= 1
              puts "attemps left #{attempts}"
            end
            p @used_letters
          end
      
          break if attempts == 0 || array_word.eql?(guess_word)
        end
    end

    =begin
    def save_game
        Dir.mkdir('output') unless Dir.exists?('output')
        time = Time.now.strftime('%Y%m%d_%H%M')
        filename = "output/save_game_#{time}.json"
        temp_hash = {"initial_word" => @array_word, "used_letter" => @used_letters , "guess_word" => @guess_word, "attemps_left" => @attempts_left}
        File.open(filename, 'w') do |file|
            file.write(temp_hash.to_json)
        end
        puts "Game saved"
        #file json => guess_word, used_letters, nombre d'attemps left
    end
=end